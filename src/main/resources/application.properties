# Info
info.application.artifactId=@project.artifactId@
info.application.name=@project.name@
info.application.version=@project.version@
info.application.description=@project.description@
info.properties.environment=${ENV:azure}

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Openapi
springdoc.writer-with-order-by-keys=true
springdoc.writer-with-default-pretty-printer=true

# Server
server.servlet.context-path=/
server.port=8080

# Logging
logging.level.root=${DEFAULT_LOGGING_LEVEL:INFO}
logging.level.it.gov.pagopa=${APP_LOGGING_LEVEL:INFO}

# CORS configuration
cors.configuration=${CORS_CONFIGURATION:'{"origins": ["*"], "methods": ["*"]}'}


# Functionality
app.update.nodo.oracle.nexi=${APP_UPDATE_NODO_ORACLE_NEXI:true}
app.update.nodo.postgre.nexi=${APP_UPDATE_NODO_POSTGRE_NEXI:true}
app.update.nodo.postgre.pagopa=${APP_UPDATE_NODO_POSTGRE_PAGOA:true}

# DB
nodo.oracle.nexi.datasource.url=${NODO_ORACLE_NEXI_DB_CONFIG_URL}
nodo.oracle.nexi.datasource.username=${NODO_ORACLE_NEXI_DB_CONFIG_USER}
nodo.oracle.nexi.datasource.password=${NODO_ORACLE_NEXI_DB_CONFIG_PASSWORD}
nodo.oracle.nexi.datasource.driver-class-name=${NODO_ORACLE_NEXI_DB_CONFIG_DRIVER}
nodo.oracle.nexi.datasource.hikari.connection-test-query=${NODO_ORACLE_NEXI_HEALTHCHECK_QUERY:select 1}

nodo.postgre.nexi.datasource.url=${NODO_POSTGRE_NEXI_DB_CONFIG_URL}
nodo.postgre.nexi.datasource.username=${NODO_POSTGRE_NEXI_DB_CONFIG_USER}
nodo.postgre.nexi.datasource.password=${NODO_POSTGRE_NEXI_DB_CONFIG_PASSWORD}
nodo.postgre.nexi.datasource.driver-class-name=${NODO_POSTGRE_NEXI_DB_CONFIG_DRIVER}
nodo.postgre.nexi.datasource.hikari.connection-test-query=${NODO_POSTGRE_NEXI_HEALTHCHECK_QUERY:select 1}

nodo.postgre.pagopa.datasource.url=${NODO_POSTGRE_PAGOPA_DB_CONFIG_URL}
nodo.postgre.pagopa.datasource.username=${NODO_POSTGRE_PAGOPA_DB_CONFIG_USER}
nodo.postgre.pagopa.datasource.password=${NODO_POSTGRE_PAGOPA_DB_CONFIG_PASSWORD}
nodo.postgre.pagopa.datasource.driver-class-name=${NODO_POSTGRE_PAGOPA_DB_CONFIG_DRIVER}
nodo.postgre.pagopa.datasource.hikari.connection-test-query=${NODO_POSTGRE_PAGOPA_HEALTHCHECK_QUERY:select 1}

# Api Config Cache configuration
service.api-config-cache.host=${API_CONFIG_CACHE_HOST}
service.api-config-cache.subscriptionKey=${API_CONFIG_CACHE_SUBSCRIPTION_KEY}

# DB
spring.datasource.url=${DB_CONFIG_URL}
spring.datasource.username=${DB_CONFIG_USER}
spring.datasource.password=${DB_CONFIG_PASSWORD}
spring.datasource.driver-class-name=${DB_CONFIG_DRIVER}
spring.datasource.hikari.maxLifetime=30000
spring.datasource.hikari.keepaliveTime=30000
spring.datasource.hikari.connection-test-query=${HEALTHCHECK_QUERY:select 1}
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.database.id=${DATABASE_ID}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.generate-ddl=false
