microservice-chart:
  namespace: "nodo"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: ghcr.io/pagopa/pagopa-node-cfg-sync
    tag: "0.0.3-23-NOD-744-deploy-uat"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
  ingress:
    create: true
    host: "weuprod.nodo.internal.platform.pagopa.it"
    path: /node-cfg-sync/(.*)
    servicePort: 8080
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "1G"
      cpu: "1.0"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 3
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "75"
  envConfig:
    WEBSITE_SITE_NAME: 'pagopa-node-cfg-sync' # required to show cloud role name in application insights
    ENV: 'azure-prod'
    APP_LOGGING_LEVEL: 'INFO'
    HIKARI_LOGGING_LEVEL: 'INFO'
    DEFAULT_LOGGING_LEVEL: 'INFO'
    CORS_CONFIGURATION: '{"origins": ["*"], "methods": ["*"]}'
    DB_NEXI_POSTGRES_URL: "jdbc:postgresql://db-postgres-ndp.p.db-nodo-pagamenti.com:5444/ndpspcp?prepareThreshold=0&currentSchema=NODO4_CFG"
    DB_NEXI_POSTGRES_USER: "pp_nodo4_cfg"
    DB_NEXI_POSTGRES_ENABLED: "false"
    DB_NEXI_POSTGRES_SERVICE_IDENTIFIER: "NDP004DEV"
    DB_NEXI_POSTGRES_CONNECTION_TIMEOUT: "15000"
    DB_NEXI_POSTGRES_MAX_LIFETIME: "30000"
    DB_NEXI_ORACLE_URL: "jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=BROKEN)(ADDRESS=(PROTOCOL=tcp)(PORT=1521)(HOST=db-nodo-pagamenti.p.db-nodo-pagamenti.com))(CONNECT_DATA=(SERVICE_NAME=NDPSPCP_NODO4_CFG))(SO_KEEPALIVE=true)(TCP_KEEPIDLE=60)(TCP_KEEPINTVL=30)(TCP_KEEPCNT=15))"
    DB_NEXI_ORACLE_USER: "NODO4_CFG"
    DB_NEXI_ORACLE_ENABLED: "true"
    DB_NEXI_ORACLE_SERVICE_IDENTIFIER: "NDP003DEV"
    DB_NEXI_ORACLE_CONNECTION_TIMEOUT: "15000"
    DB_NEXI_ORACLE_MAX_LIFETIME: "30000"
    DB_PAGOPA_POSTGRES_URL: "jdbc:postgresql://nodo-db.p.internal.postgresql.pagopa.it:6432/nodo?sslmode=require&prepareThreshold=0&currentSchema=cfg"
    DB_PAGOPA_POSTGRES_USER: "cfg"
    DB_PAGOPA_POSTGRES_ENABLED: "true"
    DB_PAGOPA_POSTGRES_SERVICE_IDENTIFIER: "NDP001DEV"
    DB_PAGOPA_POSTGRES_CONNECTION_TIMEOUT: "15000"
    DB_PAGOPA_POSTGRES_MAX_LIFETIME: "30000"
    API_CONFIG_CACHE_URL: "https://api.platform.pagopa.it/api-config-cache/o/v1/stakeholders/node/cache/schemas/v1"
    STAND_IN_MANAGER_URL: "https://api.platform.pagopa.it/stand-in-manager/api/v1"
    OTEL_SERVICE_NAME: "pagopanodecfgsync"
    OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=prod"
    OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector.elastic-system.svc:4317"
    OTEL_TRACES_EXPORTER: otlp
    OTEL_METRICS_EXPORTER: otlp
    OTEL_LOGS_EXPORTER: none
    OTEL_TRACES_SAMPLER: "always_on"
  envSecret:
    # required
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'azure-insight-connection-string'
    DB_PAGOPA_POSTGRES_PASSWORD: "db-cfg-password"
    DB_NEXI_POSTGRES_PASSWORD: "db-nexi-cfg-password"
    DB_NEXI_ORACLE_PASSWORD: "oracle-db-cfg-password"
    API_CONFIG_CACHE_RX_CONNECTION_STRING: "nodo-dei-pagamenti-cache-sync-rx-connection-string-key"
    API_CONFIG_CACHE_SA_CONNECTION_STRING: "node-cfg-sync-re-sa-connection-string-key"
    STAND_IN_MANAGER_RX_CONNECTION_STRING: "nodo-dei-pagamenti-stand-in-sync-rx-connection-string-key"
    STAND_IN_MANAGER_SA_CONNECTION_STRING: "node-cfg-sync-re-sa-connection-string-key"
    API_CONFIG_CACHE_SUBSCRIPTION_KEY: "cfg-for-node-subscription-key"
    STAND_IN_MANAGER_SUBSCRIPTION_KEY: "cfg-for-node-subscription-key"
    OTEL_EXPORTER_OTLP_HEADERS: "elastic-apm-secret-token"
  keyvault:
    name: "pagopa-p-nodo-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: "pagopa-node-cfg-sync"
            namespaces: ["nodo"]
            topologyKey: topology.kubernetes.io/zone
  canaryDelivery:
    create: false
    ingress:
      create: true
      canary:
        type: header
        headerName: X-Canary
        headerValue: canary
        weightPercent: 0
    service:
      create: true
    deployment:
      create: true
      image:
        repository: ghcr.io/pagopa/pagopa-node-cfg-sync
        tag: "0.0.0"
        pullPolicy: Always
      envConfig: {}
      envSecret: {}
