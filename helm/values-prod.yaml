microservice-chart:
  namespace: "nodo"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: ghcr.io/pagopa/pagopa-node-cfg-sync
    tag: "0.0.0-10-NOD-690-nodo-cfg-sync-microservizio"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
  ingress:
    create: true
    host: "weuprod.nodo.internal.platform.pagopa.it"
    path: /node-cfg-sync/(.*)
    servicePort: 8080
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "512Mi"
      cpu: "0.5"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 3
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "75"
  envConfig:
    WEBSITE_SITE_NAME: 'pagopa-node-cfg-sync' # required to show cloud role name in application insights
    ENV: 'azure-prod'
    APP_LOGGING_LEVEL: 'DEBUG'
    DEFAULT_LOGGING_LEVEL: 'INFO'
    CORS_CONFIGURATION: '{"origins": ["*"], "methods": ["*"]}'
    CACHET_TX_NAME: "nodo-dei-pagamenti-cache"
    OTEL_SERVICE_NAME: "pagopa-node-cfg-sync"
    OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=prod"
    OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector.elastic-system.svc:4317"
    OTEL_TRACES_EXPORTER: otlp
    OTEL_METRICS_EXPORTER: otlp
    OTEL_LOGS_EXPORTER: none
    OTEL_TRACES_SAMPLER: "always_on"
  envSecret:
    # required
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'ai-p-connection-string'
    CACHE_TX_CONNECTION_STRING: "nodo-dei-pagamenti-cache-tx-connection-string-key"
    OTEL_EXPORTER_OTLP_HEADERS: elastic-apm-secret-token
    API_CONFIG_CACHE_SUBSCRIPTION_KEY: "cfg-for-node-subscription-key"
    STAND_IN_MANAGER_SUBSCRIPTION_KEY: "cfg-for-node-subscription-key"
  keyvault:
    name: "pagopa-d-nodo-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: "pagopa-node-cfg-sync"
            namespaces: ["nodo"]
            topologyKey: topology.kubernetes.io/zone
  canaryDelivery:
    create: false
    ingress:
      create: true
      canary:
        type: header
        headerName: X-Canary
        headerValue: canary
        weightPercent: 0
    service:
      create: true
    deployment:
      create: true
      image:
        repository: ghcr.io/pagopa/yourname # TODO
        tag: "0.0.0"
        pullPolicy: Always
      envConfig: {}
      envSecret: {}
